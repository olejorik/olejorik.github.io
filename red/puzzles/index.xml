<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview | Oleg Soloviev</title><link>https://olejorik.github.io/red/puzzles/</link><atom:link href="https://olejorik.github.io/red/puzzles/index.xml" rel="self" type="application/rss+xml"/><description>Overview</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Oleg Soloviev 2018-2025</copyright><lastBuildDate>Sun, 09 Sep 2018 00:00:00 +0000</lastBuildDate><image><url>https://olejorik.github.io/images/icon_hu26380a8a42e981dc8df94547c8583a1c_243550_512x512_fill_lanczos_center_2.png</url><title>Overview</title><link>https://olejorik.github.io/red/puzzles/</link></image><item><title>Puzzle 1</title><link>https://olejorik.github.io/red/puzzles/puzzle1/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>https://olejorik.github.io/red/puzzles/puzzle1/</guid><description>&lt;meta name=viewport content="width=device-width,initial-scale=1">
&lt;meta charset="utf-8"/>
&lt;script src="https://cdn.geogebra.org/apps/deployggb.js">&lt;/script>
&lt;p>Let set $\mathcal P$ be defined by a ray originated in point $O$ and passing through point $I$, and $\mathcal Q$ be some bounded convex set (shown as an ellipse here for sake of programming easiness). Let $p_0 \in \mathcal P$, and define iteratively $\{p_n\}, \{q_n\}, \ n \in \mathbb{N} $ as:&lt;/p>
&lt;p>$$p_n \to q_{n+1} = \Pr_{\mathcal Q} p_n,$$
$$ q_n \to p_n : p_n\in\mathcal{P}, (p_n-q_n, q_n) = 0,$$
that is the next $q$ point is obtained by projection the last $p$ point on $\mathcal Q,$ and the next $p$ point is obtained by intersection of the perpendicular to line $O q$ in point $q$ and line $O I$.&lt;/p>
&lt;p>Prove that&lt;/p>
&lt;ol>
&lt;li>$\exists\ \hat q = \lim_{n\to\inf} q_n$ and&lt;/li>
&lt;li>If $\mathcal P \cap \mathcal Q \neq \varnothing$, then $\hat q \in \mathcal P$; otherwise, line $O \hat q$ is tangent to $\mathcal Q$.&lt;/li>
&lt;/ol>
&lt;p>You can click and drag objects in the illustration below.&lt;/p>
&lt;div id="ggb-element">&lt;/div>
&lt;script>
var ggbApp = new GGBApplet({"width": 691, "height": 630, "showToolBar": false, "showAlgebraInput": false, "showMenuBar": false,
"showZoomButtons": true, "showFullScreenButton": true,
"enableShiftDragZoom": true, "showResetIcon":true,
// "allowUpScale": true,
"material_id":"xbrnhk7r" }, true);
window.addEventListener("load", function() {
ggbApp.inject('ggb-element');
});
&lt;/script>&lt;blockquote>
&lt;/blockquote></description></item><item><title>Puzzle 2</title><link>https://olejorik.github.io/red/puzzles/puzzle2/</link><pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate><guid>https://olejorik.github.io/red/puzzles/puzzle2/</guid><description>&lt;p>Puzzle 2 will be published soon&lt;/p></description></item></channel></rss>